import type { ExploreResult, OutputFormat, ExploreOptions } from "source-map-explorer/lib/types";
import { formatOutput, saveOutputToFile } from "source-map-explorer/lib/output";

/**
 * Outputs an ExploreResult (generated by "source-map-explorer") to html/tsv/json files.
 * @param filenameAndPath The name of the file you want to write, including path, but without an extensions (e.g. "analyses/app1")
 * @param result The ExploreResult you want to generate output for.
 * @param formats The desired format(s) of the resulting file(s) (e.g. ["html", "tsv"])
 * @param bundleName (optional) Override for the bundle name that gets used as the html <title> (e.g. "comparison").
 */
export function saveOutputs(
  filenameAndPath: string,
  result: ExploreResult,
  formats: OutputFormat[],
  bundleName?: string
) {
  if (bundleName) {
    result.bundles[0].bundleName = bundleName;
  }
  formats.forEach((format) => {
    const fileNameAndPathWithExtension = `${filenameAndPath}.${format}`;
    const outputOptions: ExploreOptions = {
      output: { filename: fileNameAndPathWithExtension, format },
    };
    result.output = formatOutput(result.bundles, outputOptions);
    saveOutputToFile(result, outputOptions);
    console.log(`Wrote analysis to ${fileNameAndPathWithExtension}`);
  });
}
